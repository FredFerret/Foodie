{"version":3,"sources":["images/kishan.jpg","images/FB.jpg","components/TextInput.js","components/AltLogin.js","pages/LoginPage.jsx","components/RestaurantCard.js","pages/Hotels.jsx","components/Menu.js","components/MyCart.js","pages/Orders.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TextInput","type","this","props","id","name","placeholder","value","onChange","autocomplete","React","Component","AltLogin","responseGoogle","response","console","log","className","appId","fields","callback","clientId","buttonText","onSuccess","onFailure","LoginPage","onChangeUser","event","setState","username","target","onChangePass","password","click","state","history","push","content","clickable","action","e","onClick","style","marginLeft","href","src","Front","height","width","alt","RestaurantCard","list","data","to","pathname","thumbnail_image","cuisines","repeat","rating","reviews","Hotels","sortMenu","sort","a","b","toLowerCase","compareName","User","defaultValue","disabled","hidden","class","map","x","Menu","price","quantity","desc","MyCart","number","key","decrement","increment","Orders","childHandler","ChildPrice","ChildName","ChildQuantity","names","incrementQuantity","incQuan","decrementQuantity","decQuan","total","p","q","newList","hotel","location","slice","List","filter","rec","fontSize","address","menu","item","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22a6cf1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kishan.822ba488.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FB.466b12c7.jpg\";","import React from 'react';\r\n\r\nclass TextInput extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type={this.props.type} \r\n                       id=\"input\"\r\n                       name={this.props.name}\r\n                       placeholder={this.props.placeholder} \r\n                       value={this.props.value} \r\n                       onChange={this.props.onChange}\r\n                       autocomplete=\"off\"/><br/><br/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default TextInput","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass AltLogin extends Component {\r\n\r\n  render() {\r\n\r\n    const responseFacebook = (response) => {\r\n      console.log(response);\r\n    }\r\n\r\n    const responseGoogle = (response) => {\r\n      console.log(response);\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <br />\r\n        <h5>Login with Facebook or Google</h5>\r\n        <br />\r\n\r\n      <FacebookLogin\r\n        appId=\"807013956638994\"\r\n        fields=\"name,email,picture\"\r\n        callback={responseFacebook}\r\n      />\r\n      <br />\r\n      <br />\r\n\r\n\r\n      <GoogleLogin\r\n        clientId=\"151340248971-uq8ejjiftvrd7q7uunc4vgiub4ho0c9o.apps.googleusercontent.com\"\r\n        buttonText=\"LOGIN WITH GOOGLE\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n      />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AltLogin;","import React from 'react';\r\nimport '../styles/LoginStyle.css'\r\nimport Front from '../images/FB.jpg'\r\nimport TextInput from '../components/TextInput'\r\nimport AltLogin from '../components/AltLogin';\r\n\r\n\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    onChangeUser = (event) => {\r\n        this.setState({ username: event.target.value })\r\n    }\r\n\r\n    onChangePass = (event) => {\r\n        this.setState({ password: event.target.value })\r\n    }\r\n\r\n    click = () => {\r\n        if (this.state.username === 'ade', \"john\", \"Agata\" && this.state.password === 'ade123', 'john123', 'Agata123') {\r\n            this.props.history.push(`/hotels`);\r\n        }\r\n        else {\r\n            window.alert(\"Invalid Username or Password. Try Again!\")\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n\r\n                <div id=\"container\">\r\n\r\n\r\n                    <div id=\"id2\">\r\n                        <center><h1 id=\"logoApp\">THE CAFE</h1>\r\n                            <hr id=\"line\" />\r\n                            <center id=\"logoAppsm\">Eat In or Take Away</center></center>\r\n                        <center id=\"id3\">Before you place your order, you will need to log in</center>\r\n                        <br />\r\n                        <div>\r\n\r\n                            <center className=\"id2\">Login<br />\r\n                                {this.state.clickable &&\r\n                                    <div>Username: {this.state.username} <br />\r\n                                        Password: {this.state.password}</div>}\r\n                                <form action=\"#\" id=\"form\">\r\n                                    <TextInput type=\"text\" name=\"username\" placeholder=\"Enter Username\" onChange={(e) => { this.setState({ username: e.target.value }) }} />\r\n                                    <TextInput type=\"password\" name=\"password\" placeholder=\"Enter Password\" onChange={(e) => { this.setState({ password: e.target.value }) }} />\r\n\r\n                                </form>\r\n                            </center>\r\n                            <center>\r\n\r\n                                <input type=\"submit\" name=\"signin\" id=\"btn\" value=\"Login\" onClick={this.click} />\r\n\r\n                            </center>\r\n                            <AltLogin />\r\n                            <br />\r\n                            <span style={{ marginLeft: '123px' }}>New User? <a href=\"#\">Click Here</a></span>\r\n                            <br /><br />\r\n\r\n\r\n\r\n                            <div id=\"id1\">\r\n                                <img src={Front} height=\"auto\" width=\"100%\" alt=\"Banner\" />\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default LoginPage;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport data from '../data/data.json'\r\nclass RestaurantCard extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            list: data\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"cart\">\r\n                <Link to={{\r\n                    pathname:`/order/${this.props.name}`}}>\r\n                    <center><img src={this.props.thumbnail_image} alt={this.props.name}/></center>\r\n                </Link>\r\n                    <h3 id=\"hotel-title\">{this.props.name}</h3>\r\n                    <p>{this.props.cuisines}</p>\r\n                    <p>Rating: {'★'.repeat(this.props.rating)}</p>\r\n                    <p>Reviews: {this.props.reviews}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RestaurantCard","import React from 'react';\r\nimport '../styles/HotelStyle.css'\r\nimport User from '../images/kishan.jpg'\r\nimport data from '../data/data.json'\r\nimport RestaurantCard from '../components/RestaurantCard'\r\nclass Hotels extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            list: data\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    sortMenu=(e)=>{\r\n        if (e.target.value === 'rating'){\r\n            this.setState({\r\n                list: data.sort(function(a,b){return b.rating - a.rating})\r\n            })\r\n            \r\n        }\r\n        else if (e.target.value === 'review'){\r\n            this.setState({\r\n                list: data.sort(function(a,b){return b.reviews - a.reviews})\r\n            })\r\n            \r\n        }\r\n        else if (e.target.value === 'name'){\r\n            function compareName  (a, b)  {\r\n                // case-insensitive comparison\r\n                a = a.toLowerCase();\r\n                b = b.toLowerCase();\r\n              \r\n                return (a < b) ? -1 : (a > b) ? 1 : 0;\r\n              }\r\n            this.setState({\r\n                list: data.sort(function(a,b){return compareName(a.name, b.name)})\r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <div className=\"nav\">\r\n                <div id=\"logo\">\r\n                    <h2>The Cafe</h2>\r\n                </div>\r\n\r\n                <div id=\"user\">\r\n                    <div className=\"name\">Hello, Kishan</div>\r\n                    <div className=\"profile\">\r\n                        <img src={User} alt=\"profile\" id=\"img\" height=\"45\" width=\"45\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"maincart\">\r\n\r\n            <div id=\"menubar\">\r\n                <h2 id=\"menu-title\">Choose Your Favourite One</h2>\r\n                <p id =\"sort\">  Sort by &nbsp; &nbsp;\r\n                    <select id=\"sort-metrics\" defaultValue={\"none\"} onChange={(e) => this.sortMenu(e)}>\r\n                        <option value=\"none\" disabled hidden>None</option>\r\n                        <option class=\"sort-option\" value=\"name\">Name</option>\r\n                        <option class=\"sort-option\" value=\"rating\">Ratings</option>\r\n                        <option class=\"sort-option\" value=\"review\">Reviews</option>\r\n                    </select>\r\n                </p>\r\n            </div>\r\n            {this.state.list.map(\r\n                x => \r\n                    <RestaurantCard thumbnail_image={x.thumbnail_image} name = {x.name} cuisines = {x.cuisines} rating = {x.rating} reviews = {x.reviews}/>\r\n                    \r\n            )}\r\n\r\n        \r\n            \r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Hotels;","import React from 'react'\r\n\r\nclass Menu extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            price: '',\r\n            quantity:0\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3 className='fname'>\r\n                {this.props.name}\r\n                </h3>\r\n                    <div className='desc'>\r\n                        <p>{this.props.desc}</p>\r\n                        <button className=\"btn\" value={this.props.price} onClick={()=>this.props.action(this.props.price,this.props.name,this.state.quantity)}>Add</button>\r\n                    </div>\r\n                    <br/> \t\r\n                    <p className='amount'>{'\\u20B9'}  {this.props.price} </p>\r\n                    \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\n\r\nclass MyCart extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.props.name.map((name,number) => (\r\n                    <p key={number} id=\"pitem\"> \r\n                        {name}\r\n                    <br/><br/>\r\n                    <input className=\"ip\" type=\"button\" value=\"-\" onClick={()=>this.props.decrement(this.props.quantity)}/>\r\n                    <input className=\"ip\" id=\"tx-w\" type=\"text\" value={this.props.quantity}/>\r\n                    <input className=\"ip\" type=\"button\" value=\"+\" onClick={()=>this.props.increment(this.props.quantity)}/>\r\n                    </p>\r\n                ))}   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyCart","import React from 'react'\r\nimport '../styles/OrderStyle.css'\r\nimport User from '../images/kishan.jpg' \r\nimport Menu from '../components/Menu'\r\nimport data from '../data/data.json'\r\nimport MyCart from '../components/MyCart'\r\n\r\nclass Orders extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            list: data,\r\n            id:'',\r\n            newList:[],\r\n            price:'',\r\n            name:[],\r\n            total:0,\r\n            quantity:0,\r\n            clickable: false\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        const hotel = this.props.history.location.pathname.slice(7)\r\n        const List = this.state.list.filter(function (rec) { return rec.name === hotel})\r\n        this.setState({\r\n            id:hotel,\r\n            newList: List\r\n        })\r\n    }\r\n\r\n    childHandler = (ChildPrice,ChildName,ChildQuantity) => {\r\n        const names = this.state.name; \r\n        names.push(ChildName);\r\n        this.setState(\r\n            {price: ChildPrice,\r\n            name: names,\r\n            quantity : ChildQuantity+1,\r\n            clickable: true }\r\n        )};\r\n\r\n    incrementQuantity = (incQuan) => {\r\n        this.setState(\r\n            {\r\n                quantity: incQuan+1\r\n                \r\n            }\r\n        )\r\n    };\r\n\r\n    decrementQuantity = (decQuan) => {\r\n        if(this.state.quantity>=1){\r\n            this.setState(\r\n                {\r\n                    quantity: decQuan-1\r\n                    \r\n                }\r\n            )\r\n        }\r\n        \r\n    };\r\n\r\n    total = (p,q) => {\r\n        this.setState(\r\n            {\r\n                total:p*q\r\n            }\r\n        )\r\n    }\r\n   \r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <div className=\"nav\">\r\n                <div id=\"logo\">\r\n                    <h2>The Cafe</h2>\r\n                </div>\r\n\r\n                <div id=\"user\">\r\n                    <div className=\"name\">Hello, Kishan</div>\r\n                    <div className=\"profile\">\r\n                        <img src={User} id=\"img\" height=\"45\" width=\"45\" alt=\"profile\"/>\r\n                    </div>\r\n                </div>\r\n            \r\n                \r\n            </div>\r\n\r\n            <div id=\"content\">\r\n                <div id=\"head\">\r\n                    <h1 className='hname'>{this.state.newList.map(x => x.name)}</h1>\r\n                    <h5 className='aname'><i class=\"fa fa-map-marker\" style={{fontSize:18}}></i> {this.state.newList.map(x => x.address)}</h5>\r\n                    <div id='items'>\r\n                        <center><h2>Order Now</h2></center>\r\n                        <br/>\r\n\r\n                        {this.state.newList.map (\r\n                            x => x.menu.map(item => <Menu \r\n                                                        id = {item.id}\r\n                                                        desc={item.desc} \r\n                                                        price={item.price} \r\n                                                        name={item.name}\r\n                                                        action={this.childHandler} />)\r\n                        )\t\t\r\n                                        \r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div id=\"panel\">\r\n                    <div id=\"logo\">               \r\n                    </div> \r\n                    <div id=\"right\">\r\n                        <div id= \"right-in\">\r\n                            <h4>My Cart</h4>\r\n                                \r\n                            { this.state.clickable && \r\n                                <div>\r\n                                    <MyCart \r\n                                        name={this.state.name}\r\n                                        price={this.state.price}\r\n                                        quantity={this.state.quantity} \r\n                                        increment={this.incrementQuantity} \r\n                                        decrement={this.decrementQuantity}>\r\n                                    </MyCart>\r\n                                </div>\r\n                            }\r\n    \r\n                            <div id=\"total\">\r\n                                <p id=\"total\"> Total amount: \r\n                                    <span className=\"spn\">{'\\u20B9'}  {this.state.total}</span>\r\n                                </p>\r\n                                <input id=\"pay\" type=\"button\" value=\"Calculate\"\r\n                                onClick = {() => this.total(this.state.price,this.state.quantity)} />\r\n                                <br/>\r\n                                <input id=\"pay\" type=\"button\" value=\"Pay Now\"/>\r\n                            </div>\r\n                        </div>                \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Orders;","import React from 'react';\r\nimport LoginPage from './pages/LoginPage'\r\nimport Hotels from './pages/Hotels'\r\nimport Orders from './pages/Orders'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LoginPage}></Route>\r\n        <Route exact path=\"/hotels\" component={Hotels}></Route>\r\n        <Route exact path=\"/order/:id\" component={Orders}></Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import LoginPage from './pages/LoginPage'\r\n// import Hotels from './pages/Hotels'\r\n// import Orders from './pages/Orders'\r\n\r\n// ReactDOM.render(<LoginPage />, document.getElementById('root'));\r\n// ReactDOM.render(<Hotels />, document.getElementById('root'));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}